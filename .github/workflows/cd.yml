name: CMS (Wordpress Deployment) - Manual Workflow

on:
  workflow_dispatch:
    branches:
      - main
    inputs:
      provisionAP:
        description: "Provision EFS Access point?"
        type: boolean
      deployWPHelmChart:
        description: "Install/Upgrade Helm Chart for Bitnami Wordpress?"
        type: boolean
      deployAdditionalHelmChart:
        description: "Install/Upgrade Additional Helm Chart (Ingress, VC)?"
        type: boolean
env:
  REPLICA_COUNT: 1

jobs:
  deploy:
    name: Deploy CMS and create required Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: '0'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{vars.REGION}}

      - name: Install eksctl
        run: |
          ARCH=amd64
          PLATFORM=$(uname -s)_$ARCH
          curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
          # (Optional) Verify checksum
          curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check
          tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
          sudo mv /tmp/eksctl /usr/local/bin

      - name: Create Access Point for EFS volume
        if: inputs.provisionAP
        run: |
          # Fetch EFS File System ID
          EFS_FS_ID=$(aws efs describe-file-systems \
            --region ${{vars.REGION}} \
            --output json \
            --query "FileSystems[?contains(CreationToken, 'efs-${{vars.CLUSTER}}')].FileSystemId" \
            --output text)
          
          # Create EFS Access Point
          EFS_AP=$(aws efs create-access-point \
            --file-system-id $EFS_FS_ID \
            --posix-user Uid=1000,Gid=1000 \
            --root-directory "Path=/bitnami,CreationInfo={OwnerUid=1000,OwnerGid=1000,Permissions=777}" \
            --region ${{vars.REGION}} \
            --tags service=cms-wordpress \
            --query 'AccessPointId' \
            --output text)
          echo "Access point created"

      - name: Fetch RDS InstanceId, EFS Id & EFS AP
        id: idFetcher
        run: |
          dbInstanceIdentifier=$(aws rds describe-db-instances --db-instance-identifier ${{vars.CLUSTER}}-db --region ${{vars.REGION}} --query "DBInstances[].Endpoint.Address" --output text)
          efsId=$(aws efs describe-file-systems --region ${{vars.REGION}} --output json --query "FileSystems[?contains(CreationToken, 'efs-${{vars.CLUSTER}}')].FileSystemId" --output text)
          efsAp=$(aws efs describe-access-points --region ${{vars.REGION}} --output json --query "AccessPoints[?contains(FileSystemId, '$efsId') && Tags[?Key=='service' && Value=='cms-wordpress']].AccessPointId" --output text)
          
          echo "dbInstanceIdentifier=$dbInstanceIdentifier" >> $GITHUB_OUTPUT
          echo "efsId=$efsId" >> $GITHUB_OUTPUT
          echo "efsAP=$efsAP" >> $GITHUB_OUTPUT

      - name: helm deploy CMS(Wordpress) chart
        if: inputs.deployWPHelmChart
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.4
        with:
          aws-region: ${{vars.REGION}}
          cluster-name: ${{vars.CLUSTER}}
          chart-repository: oci://registry-1.docker.io
          chart-path: bitnamicharts/wordpress
          namespace: ${{vars.NAMESPACE}}
          values: externalDatabase.host=${{steps.idFetcher.outputs.dbInstanceIdentifier}},externalDatabase.database=cms,externalDatabase.user=${{secrets.MYSQL_MASTER_USER}},externalDatabase.password=${{secrets.MYSQL_MASTER_PASSWORD}},mariadb.enabled=false,replicaCount=${{env.REPLICA_COUNT}},persistence.existingClaim=cms-files-pvc,service.type=ClusterIP,resources.requests.cpu=1000m,resources.requests.memory=1024Mi
          name: cms

      - name: helm upgrade Additional Helm chart
        if: inputs.deployAdditionalHelmChart
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.4
        with:
          aws-region: ${{vars.REGION}}
          cluster-name: ${{vars.CLUSTER}}
          config-files: infrastructure/helm/values.yaml
          chart-path: infrastructure/helm
          namespace: ${{vars.NAMESPACE}}
          values: ingress.enabled=true,ingress.certificateARN=${{ secrets.CERTIFICATE_ARN }},ingress.host=${{ format('{0}.{1}', 'cms', vars.DOMAIN) }},volume.enabled=true,volume.efsId=${{steps.idFetcher.outputs.efsId}},volume.efsAp=${{steps.idFetcher.outputs.efsAp}}
          name: cms-additional
